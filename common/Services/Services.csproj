<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <AssemblyName>Mmm.Platform.IoT.Common.Services</AssemblyName>
    <RootNamespace>$(AssemblyName)</RootNamespace>
  </PropertyGroup>

  <ItemGroup>
    <FrameworkReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="Azure.Data.AppConfiguration" Version="1.0.0-preview.5" />
    <PackageReference Include="Azure.Storage.Blobs" Version="12.0.0"/>
    <PackageReference Include="Microsoft.Azure.Cosmos.Table" Version="1.0.4" />
    <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="5.6.0" />
    <PackageReference Include="Microsoft.Azure.DocumentDB.Core" Version="2.1.3" />
    <PackageReference Include="Microsoft.Azure.KeyVault" Version="3.0.4" />
    <PackageReference Include="Microsoft.IdentityModel.Protocols.OpenIdConnect" Version="5.6.0" />
    <PackageReference Include="Autofac" Version="4.6.2" />
    <PackageReference Include="Autofac.Extensions.DependencyInjection" Version="4.2.0" />
    <PackageReference Include="Microsoft.Extensions.Logging" Version="2.2.0" />
    <PackageReference Include="Microsoft.IdentityModel.Clients.ActiveDirectory" Version="5.2.4" />
    <PackageReference Include="Microsoft.Extensions.Configuration.AzureAppConfiguration" Version="2.0.0-preview-010050001-38" />
    <PackageReference Include="Microsoft.Extensions.Configuration.AzureKeyVault" Version="2.2.0" />
  </ItemGroup>

  <Target Name="GenerateAppConfigFiles" BeforeTargets="BeforeBuild">
    <PropertyGroup>
      <RequiredNodeMajorVersion>13</RequiredNodeMajorVersion>
      <RequiredNodeMinorVersion>3</RequiredNodeMinorVersion>
      <RepositoryRootDirectory>$(MSBuildProjectDirectory)/../..</RepositoryRootDirectory>
      <JsonToPocoDirectory>$(RepositoryRootDirectory)/json-to-poco</JsonToPocoDirectory>
      <AppConfigJsonTemplateFile>$(RepositoryRootDirectory)/deployment/pipelines/templates/infra/app-config-template.json</AppConfigJsonTemplateFile>
      <AppConfigFilesOutputDirectory>$(RepositoryRootDirectory)/common/Services/Config</AppConfigFilesOutputDirectory>
    </PropertyGroup>
    <ItemGroup>
      <AppConfigAutoGeneratedFiles Include="$(AppConfigFilesOutputDirectory)/*.Generated.cs" />
    </ItemGroup>
    <Message Text="Generating AppConfig files" Importance="High"/>
    <Delete Files="@(AppConfigAutoGeneratedFiles)" />
    <Exec Command="node --version" EchoOff="true" ConsoleToMSBuild="true" IgnoreExitCode="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="NodeVersion" />
      <Output TaskParameter="ExitCode" PropertyName="NodeVersionExitCode" />
    </Exec>
    <Error Condition="$(NodeVersionExitCode) != 0" Text="Node.js must be installed and the command 'node' must be available on the path" />
    <Error Condition="$([System.Int32]::Parse($([System.Text.RegularExpressions.Regex]::Match($(NodeVersion), &quot;(?&lt;=^v)\d+&quot;).Value))) &lt; $(RequiredNodeMajorVersion)" Text="Found Node.js $(NodeVersion) was installed, but version must be v$(RequiredNodeMajorVersion).$(RequiredNodeMinorVersion) or higher" />
    <Error Condition="$([System.Int32]::Parse($([System.Text.RegularExpressions.Regex]::Match($(NodeVersion), &quot;(?&lt;=^v\d+\.)\d+&quot;).Value))) &lt; $(RequiredNodeMinorVersion)" Text="Found Node.js $(NodeVersion) was installed, but version must be v$(RequiredNodeMajorVersion).$(RequiredNodeMinorVersion) or higher" />
    <Exec Command="npm install" WorkingDirectory="$(JsonToPocoDirectory)" ConsoleToMSBuild="true" EchoOff="true" />
    <Exec Command="node $(JsonToPocoDirectory)/index.js $(AppConfigJsonTemplateFile) --output $(AppConfigFilesOutputDirectory)" />
    <ItemGroup>
      <Compile Include="**/*$(DefaultLanguageSourceExtension)"
               Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder);$(BaseIntermediateOutputPath)**;$(BaseOutputPath)**;@(Compile)" />
    </ItemGroup>
  </Target>

</Project>
