{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "applicationCode": {
        "type": "string",
        "minLength": 3
      },
      "deployEnvironment": {
        "type": "string",
        "minLength": 2
      },
      "skuName": {
        "type": "string",
        "defaultValue": "Y1",
        "allowedValues": [
          "D1",
          "B1",
          "B2",
          "B3",
          "S1",
          "S2",
          "S3",
          "P1",
          "P2",
          "P3",
          "P4",
          "P1v2",
          "P2v2",
          "p3v2",
          "Y1"
        ],
        "metadata": {
          "description": "Describes plan's pricing tier and capacity. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
        }
      },
      "skuCapacity": {
        "type": "int",
        "defaultValue": 1,
        "minValue": 1,
        "metadata": {
          "description": "Describes plan's instance count"
        }
      },
      "skuTier": {
        "type": "string",
        "defaultValue": "Standard",
        "allowedValues": [
          "Free",
          "Shared",
          "Basic",
          "Standard",
          "Premium"
        ],
        "metadata": {
          "description": "the pricing tier"
        }
      },
      "appInsightsLocation": {
        "minLength": 2,
        "type": "string",
        "metadata": {
          "description": "AppInsight resource location"
        }
      },
      "storageAccountName": {
        "type": "string",
        "metadata": {
          "description": "Name of the exiting Storage Account to store function logs"
        }
      },
      "runtime": {
        "type": "string",
        "defaultValue": "node",
        "allowedValues": [ "node", "dotnet", "java" ],
        "metadata": {
          "description": "The language worker runtime to load in the function app."
        }
      },
      "funcVersion": {
        "type": "string",
        "defaultValue": "~2",
        "metadata": {
          "description": "Version of the function app. v1 or v2"
        }
      }
    },
      "variables": {
        "apiVersion": "2016-02-03",
        "location": "[resourceGroup().location]",
        "functionAppName": "[concat(parameters('applicationCode'), '-fn-', parameters('deployEnvironment'))]",
        "applicationInsightName": "[concat(parameters('applicationCode'), '-fn-', parameters('deployEnvironment'))]",
        "storageVersion": "2016-01-01"
      },
      "resources": [
        {
          "type": "Microsoft.Web/serverfarms",
          "name": "[variables('functionAppName')]",
          "location": "[resourceGroup().location]",
          "apiVersion": "2016-09-01",
          "sku": {
            "name": "[parameters('skuName')]",
            "tier": "[parameters('skuTier')]",
            "capacity": "[parameters('skuCapacity')]"
          },
          "dependsOn": [],
          "tags": {
            "displayName": "Consumption Plan"
          },
          "properties": {
            "name": "[variables('functionAppName')]",
            "numberOfWorkers": 1
          }
        },
        {
          "type": "Microsoft.Web/sites",
          "kind": "functionapp",
          "name": "[variables('functionAppName')]",
          "apiVersion": "2016-08-01",
          "location": "[variables('location')]",
          "scale": null,
          "properties": {
            "enabled": true,
            "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('functionAppName'))]",
            "reserved": false,
            "scmSiteAlsoStopped": false,
            "hostingEnvironmentProfile": null,
            "clientAffinityEnabled": false,
            "clientCertEnabled": false,
            "hostNamesDisabled": false,
            "containerSize": 1536,
            "dailyMemoryTimeQuota": 0,
            "cloningInfo": null,
            "phpVersion": "",
            "use32BitWorkerProcess": true,
            "siteConfig": {
              "appSettings": [
                {
                  "name": "AzureWebJobsStorage",
                  "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2015-05-01-preview').key1,';')]"
                },
                {
                  "name": "AzureWebJobsDashboard",
                  "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2015-05-01-preview').key1,';')]"
                },
                {
                  "name": "FUNCTIONS_EXTENSION_VERSION",
                  "value": "[parameters('funcVersion')]"
                },
                {
                  "name": "FUNCTIONS_WORKER_RUNTIME",
                  "value": "[parameters('runtime')]"
                },
                //{
                //  "name": "WEBSITE_NODE_DEFAULT_VERSION",
                //  "value": "10.14.1"
                //},
                {
                  "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                  "value": "[reference(resourceId('microsoft.insights/components/', variables('functionAppName')), '2015-05-01').InstrumentationKey]"
                },
                {
                  "name": "WEBSITE_CONTENTSHARE",
                  "value": "[variables('functionAppName')]"
                },
                {
                  "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                  "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2015-05-01-preview').key1,';')]"
                }
                //{
                //  "name": "CosmosDbConnectionString",
                //  "value": "AccountEndpoint=https://cosmos-odin-mt-poc.documents.azure.com:443/;AccountKey=0Fr4FU7kvZsLLLprOaJsH0YfAmuSiGkQH29mDxRbYd0IPhiqhpf6U10mXd0TpgaYM3hVqs0Y7UXYa2dduyOVVQ==;"
                //},
                //{
                //  "name": "CosmosDbDatabaseName",
                //  "value": "iot"
                //},
                //{
                //  "name": "EventHubLifecycle",
                //  "value": "Endpoint=sb://eventhubs-odin-mt-poc.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=6nzksDnikxZ9sy7M13ubWJjKxc/qWqlxLDdfH15uDVo=;EntityPath=lifecycle"
                //},
                //{
                //  "name": "EventHubTelemetry",
                //  "value": "Endpoint=sb://eventhubs-odin-mt-poc.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=6nzksDnikxZ9sy7M13ubWJjKxc/qWqlxLDdfH15uDVo=;EntityPath=telemetry"
                //},
                //{
                //  "name": "EventHubTwinChange",
                //  "value": "Endpoint=sb://eventhubs-odin-mt-poc.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=6nzksDnikxZ9sy7M13ubWJjKxc/qWqlxLDdfH15uDVo=;EntityPath=twin-change"
                //}
              ]
            }
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/serverfarms', variables('functionAppName'))]",
            "[resourceId('Microsoft.Insights/components', variables('functionAppName'))]"
          ],
          "resources": []
        },
        {
          "type": "Microsoft.Insights/components",
          "name": "[concat(variables('functionAppName'))]",
          "location": "[parameters('appInsightsLocation')]",
          "apiVersion": "2014-04-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/serverfarms', variables('functionAppName'))]"
          ],
          "tags": {
            "displayName": "[variables('functionAppName')]"
          },
          "properties": {
            "applicationId": "[variables('functionAppName')]"
          }
        }
      ],
      "outputs": {
        "CloudResourceName": {
          "value": "[variables('functionAppName')]",
          "type": "string"
        },
        "CloudResourceUri": {
          "value": "",
          "type": "string"
        },
        "CloudResourceType": {
          "value": "Azure function",
          "type": "string"
        }
      }
    }