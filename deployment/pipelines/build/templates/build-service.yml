# Docker
# Build a Docker image 
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

parameters:
  tag: '$(Build.BuildId)' # Optional will take buildId
  service: ''  # required
  dockerFile: '/Dockerfile' # Most services require modification
  context: '' # Never should need changing, just added it in case
  appConfigurationName: 'crsliot-appconfig-dev'
  resourceGroup: 'rg-iot-crsl-dev'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    pool:
        vmImage: 'ubuntu-latest'
    displayName: Build
    steps:

    - task: DotNetCoreCLI@2
      inputs:
      command: 'test'
      projects: '$(Build.SourcesDirectory)/${{ parameters.service }}/**/WebService.Test.csproj'

    - task: AzureCLI@1
      inputs:
        azureSubscription: '3M-CRSLAD16-BBIoTP-Dev'
        scriptLocation: 'inlineScript'
        inlineScript: |
            appConfigurationConnectionString=`az appconfig credential list --name ${{parameters.appConfigurationName}} -g ${{parameters.resourceGroup}} --query "[?name=='Primary'].connectionString | [0]"`
            echo "##vso[task.setvariable variable=appConfigurationConnectionString]$appConfigurationConnectionString"
    - task: Docker@2
      displayName: Build an image
      inputs:
        containerRegistry: 'OdinDockerHub'
        repository: 'azureiot3m/${{ parameters.service }}'
        command: 'build'
        dockerfile: '$(Build.SourcesDirectory)/${{ parameters.service }}${{ parameters.dockerFile }}'
        buildContext: '$(Build.SourcesDirectory)${{ parameters.context }}'
        tags: ${{ parameters.tag }}
        arguments: --build-arg AppConfigurationConnectionString="$(appConfigurationConnectionString)"
    - task: Docker@2
      displayName: Push the image
      inputs:
        containerRegistry: 'OdinDockerHub'
        repository: 'azureiot3m/${{ parameters.service }}'
        command: 'push'
        dockerfile: '$(Build.SourcesDirectory)/${{ parameters.service }}${{ parameters.dockerFile }}'
        buildContext: '$(Build.SourcesDirectory)${{ parameters.context }}'
        tags: ${{ parameters.tag }}