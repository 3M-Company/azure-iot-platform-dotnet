# 
# https://aka.ms/yaml
parameters:
  serviceConnection: ''
  resourceGroup: ''
  aksName: ''
  dockerTag: 'latest'

steps:
# - task: AzureCLI@1
#   inputs:
#     azureSubscription: ${{parameters.serviceConnection}}
#     scriptLocation: 'inlineScript'
#     inlineScript: |-
#       ls
#     workingDirectory: 'config/WebService'
# - task: Kubernetes@1
#   inputs:
#     connectionType: 'Azure Resource Manager'
#     azureSubscriptionEndpoint: ${{parameters.serviceConnection}}
#     azureResourceGroup: ${{parameters.resourceGroup}}
#     kubernetesCluster: ${{parameters.aksName}}
#     useClusterAdmin: true
#     namespace: 'default'
#     command: 'create'
#     arguments: 'serviceaccount --namespace kube-system default'
# - task: Kubernetes@1
#   inputs:
#     connectionType: 'Azure Resource Manager'
#     azureSubscriptionEndpoint: ${{parameters.serviceConnection}}
#     azureResourceGroup: ${{parameters.resourceGroup}}
#     kubernetesCluster: ${{parameters.aksName}}
#     useClusterAdmin: true
#     namespace: 'default'
#     command: 'create'
#     arguments: 'clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:default'
- task: HelmDeploy@0
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscription: ${{parameters.serviceConnection}}
    azureResourceGroup: ${{parameters.resourceGroup}}
    kubernetesCluster: ${{parameters.aksName}}
    useClusterAdmin: true
    namespace: 'default'
    command: 'init'
# - task: HelmDeploy@0
#   inputs:
#     connectionType: 'Azure Resource Manager'
#     azureSubscription: ${{parameters.serviceConnection}}
#     azureResourceGroup: ${{parameters.resourceGroup}}
#     kubernetesCluster: ${{parameters.aksName}}
#     useClusterAdmin: true
#     namespace: 'default'
#     command: 'package'
#     chartPath: 'deployment/charts/config'
#     chartVersion: '$(Build.BuildId)'
- task: HelmDeploy@0
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscription: ${{parameters.serviceConnection}}
    azureResourceGroup: ${{parameters.resourceGroup}}
    kubernetesCluster: ${{parameters.aksName}}
    useClusterAdmin: false
    namespace: 'default'
    command: 'upgrade'
    chartType: 'FilePath'
    chartPath: 'deployment/charts/config'
    releaseName: 'config'
# - task: PublishBuildArtifacts@1
#   inputs:
#     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#     ArtifactName: 'drop'
#     publishLocation: 'Container'