parameters:
  serviceConnection: ''
  resourceGroup: ''
  location: ''
  cosmosDBName: ''
  cosmosDBthroughput: ''
  collectionName: ''
  applicationCode: ''
  deployEnvironment: ''

steps:
- task: AzureResourceGroupDeployment@2
  displayName: "Deploy Cosmos DB"
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    action: 'Create Or Update Resource Group'
    resourceGroupName: ${{ parameters.resourceGroup }}
    location: 'Central US'
    templateLocation: 'Linked artifact'
    csmFile: '$(System.DefaultWorkingDirectory)/deployment/ARM/templates/cosmosdb.json'
    csmParametersFile: '$(System.DefaultWorkingDirectory)/deployment/ARM/parameters/cosmosdb.json'
    overrideParameters: '-accountName ${{ parameters.applicationCode }}-cosmos-${{ parameters.deployEnvironment }} -location ${{ parameters.location }} -primaryRegion ${{ parameters.location }} -databaseName ${{ parameters.cosmosDBName }} -throughput ${{ parameters.cosmosDBthroughput }} -container1Name ${{ parameters.collectionName }}'
    deploymentMode: 'Incremental'
## handled using a keyvault script to load all secrets once all resources are created
# - task: AzureCLI@1
#   displayName: Add Connection string to Key Vault
#   inputs:
#     azureSubscription: ${{ parameters.serviceConnection }}
#     scriptLocation: 'inlineScript'
#     inlineScript: |-
#       connString=$(az cosmosdb list-connection-strings --name ${{ parameters.cosmosDBName }} --resource-group ${{ parameters.resourceGroup }} | jq -r .connectionStrings[0].connectionString)
#       az keyvault secret set --name documentDBConnectionString --vault-name ${{ parameters.keyVaultName }} --value $connString