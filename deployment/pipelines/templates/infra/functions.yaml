
parameters:
  serviceConnection: ''
  resourceGroup: ''
  functionApp1Name: ''
  functionApp2Name: ''
  functionApp3Name: ''
  storageAccountName: ''
  location: ''
  appConfigName: ''
  
steps:

## Deploy ARM Resource -- Deploy AppConfig controller Function App
- task: AzureResourceGroupDeployment@2
  displayName: "Create Azure function App: AppConfigController"
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    action: 'Create Or Update Resource Group'
    resourceGroupName: ${{ parameters.resourceGroup }}
    location: '${{ parameters.location }}'
    templateLocation: 'Linked artifact'
    csmFile: '$(System.DefaultWorkingDirectory)/deployment/ARM/templates/functions.json'
    csmParametersFile: '$(System.DefaultWorkingDirectory)/deployment/ARM/parameters/functions.json'
    overrideParameters: '-functionAppName ${{ parameters.functionApp3Name }} -storageAccountName ${{ parameters.storageAccountName }} -runtime dotnet'
    deploymentMode: 'Incremental'
    addSpnToEnvironment: true

## TODO -- Get Trigger binding information CLI probally. Event Hub based
## Deploy ARM Resource
- task: AzureResourceGroupDeployment@2
  displayName: "Create Azure function App: deviceproperties"
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    action: 'Create Or Update Resource Group'
    resourceGroupName: ${{ parameters.resourceGroup }}
    location: '${{ parameters.location }}'
    templateLocation: 'Linked artifact'
    csmFile: '$(System.DefaultWorkingDirectory)/deployment/ARM/templates/functions.json'
    csmParametersFile: '$(System.DefaultWorkingDirectory)/deployment/ARM/parameters/functions.json'
    overrideParameters: '-functionAppName ${{ parameters.functionApp1Name }} -storageAccountName ${{ parameters.storageAccountName }} -runtime dotnet'
    deploymentMode: 'Incremental'
    addSpnToEnvironment: true

## Deploy ARM Resource -- Deploy Device Properties Function App (talk to Swami)
## Function has been created with ver 1.0 in Odin env, here both the functions created with ver 2.0
- task: AzureResourceGroupDeployment@2
  displayName: "Create Azure function App: hubmessaging"
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    action: 'Create Or Update Resource Group'
    resourceGroupName: ${{ parameters.resourceGroup }}
    location: '${{ parameters.location }}'  
    templateLocation: 'Linked artifact'
    csmFile: '$(System.DefaultWorkingDirectory)/deployment/ARM/templates/functions.json'
    csmParametersFile: '$(System.DefaultWorkingDirectory)/deployment/ARM/parameters/functions.json'
    overrideParameters: '-functionAppName ${{ parameters.functionApp2Name }} -storageAccountName ${{ parameters.storageAccountName }} -runtime node'
    deploymentMode: 'Incremental'
    addSpnToEnvironment: true

- task: AzureCLI@1
  displayName: "CLI: set appsettings for fucntion app"
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    scriptLocation: 'inlineScript'
    inlineScript: |-
      devicepropertiesfn=${{ parameters.functionApp1Name }}
      messagingfnapp=${{ parameters.functionApp2Name }}
      appConfigfn=${{ parameters.functionApp3Name }}
      kVaultName=${{ parameters.keyVaultName }}
      cosmosDbConn=$(az keyvault secret show --name "documentDBConnectionString" --vault-name $kVaultName | grep value | awk -F '\"' '{print $4}')
      lifecycleEvConn=$(az keyvault secret show --name "lifecycleEventHubConnString" --vault-name $kVaultName | grep value | awk -F '\"' '{print $4}')
      telemetryEvConn=$(az keyvault secret show --name "telemetryEventHubConnString" --vault-name $kVaultName | grep value | awk -F '\"' '{print $4}')
      twinchangeEvConn=$(az keyvault secret show --name "twinChangeEventHubConnString" --vault-name $kVaultName | grep value | awk -F '\"' '{print $4}')
      az functionapp config appsettings set --name $messagingfnapp \
        --settings "CosmosDbConnectionString"="$cosmosDbConn" \
          "CosmosDbDatabaseName"="iot" \
          "EventHubLifecycle"="$lifecycleEvConn" \
          "EventHubTelemetry"="$telemetryEvConn" \
          "EventHubTwinChange"="$twinchangeEvConn" \
        --resource-group ${{ parameters.resourceGroup }}
      az functionapp config appsettings set --name $devicepropertiesfn \
        --settings "ConsumerGroup"="lifecyclecg" \
          "ConsumerGroupTC"="twinchangecg" \
          "CosmosConnection"="$cosmosDbConn" \
          "CosmosDB"="pcs-storage" \
          "CosmosDBRus"="400" \
          "EventHubLifecycle"="$lifecycleEvConn" \
          "EventHubName"="lifecycle" \
          "EventHubNameTC"="twin-change" \
          "EventHubTwinChange"="$twinchangeEvConn" \
          "WhiteList"="tags.*,reported.*, reported.Protocol, reported.SupportedMethods, reported.DeviceMethodStatus, reported.FirmwareUpdateStatus" \
        --resource-group ${{ parameters.resourceGroup }}

# need to check with odin for exact values of these settings
# - task: AzureCLI@1
#   displayName: "CLI: add functionapps to appconfig"
#   inputs:
#     azureSubscription: ${{ parameters.serviceConnection }}
#     scriptLocation: 'inlineScript'
#     inlineScript: |-
#       az appconfig kv set --key StorageAccount:name --value "functiondefinition" --name ${{ parameters.appConfigName }} --yes
#       az appconfig kv set --key TenantManagerService:telemetryFunctionUri --value "https://${{ parameters.functionApp2Name }}.scm.azurewebsites.net" --name ${{ parameters.appConfigName }} --yes
#       az appconfig kv set --key TenantManagerService:twinChangeFunctionUri --value "https://${{ parameters.functionApp2Name }}.scm.azurewebsites.net" --name ${{ parameters.appConfigName }} --yes
#       az appconfig kv set --key TenantManagerService:lifecycleFunctionUri --value "https://${{ parameters.functionApp2Name }}.scm.azurewebsites.net" --name ${{ parameters.appConfigName }} --yes
#       az appconfig kv set --key TenantManagerService:setAppConfigEndpoint --value "https://${{ parameters.functionApp2Name }}.scm.azurewebsites.net" --name ${{ parameters.appConfigName }} --yes