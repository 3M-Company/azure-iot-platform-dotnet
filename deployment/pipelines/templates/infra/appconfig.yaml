
parameters:
  serviceConnection: ''
  resourceGroup: ''
  location: ''
  appConfigName: ''
  aksName: ''

steps:
- task: AzureResourceGroupDeployment@2
  displayName: "Deploy App Configuration"
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    action: 'Create Or Update Resource Group'
    resourceGroupName: ${{ parameters.resourceGroup }}
    location: ${{ parameters.location }}
    templateLocation: 'Linked artifact'
    csmFile: '$(System.DefaultWorkingDirectory)/deployment/ARM/templates/appconfig.json'
    csmParametersFile: '$(System.DefaultWorkingDirectory)/deployment/ARM/parameters/appconfig.json'
    overrideParameters: '-appConfigName ${{ parameters.appConfigName }} -location ${{ parameters.location }}'
    deploymentMode: 'Incremental'
    addSpnToEnvironment: true

- task: AzureCLI@1
  displayName: Create App Config Secret in Kube
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    scriptLocation: 'inlineScript'
    inlineScript: |-
      az aks get-credentials -n ${{ parameters.aksName }} -g ${{ parameters.resourceGroup }}
      connString=$(az appconfig credential list --name ${{ parameters.appConfigName }} -g ${{ parameters.resourceGroup }} | jq -r .[0].connectionString)
      kubectl create secret generic --namespace=default globalsecrets --from-literal=PCS_APPLICATION_CONFIGURATION=$connString --dry-run -o yaml | kubectl apply -f -

- task: AzureCLI@1
  displayName: Add Values to App Config
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    scriptLocation: 'inlineScript'
    inlineScript: |-
      # Needed because Azure Devops has a bug in the extention included, normally the extension will handle the flattening --  Andrew Schmidt
      jq --arg delim ':' 'reduce (tostream|select(length==2)) as $i ({};
          .[[$i[0][]|tostring]|join($delim)] = $i[1]
      )' $(System.DefaultWorkingDirectory)/deployment/pipelines/templates/infra/app-config-template.json > $(System.DefaultWorkingDirectory)/deployment/pipelines/templates/infra/app-config-template-translated.json 
      # Import Keys
      az appconfig kv import -y --name ${{ parameters.appConfigName }} --format json --source file --path "$(System.DefaultWorkingDirectory)/deployment/pipelines/templates/infra/app-config-template-translated.json"
      # Set KeyVault Keys
      az appconfig kv set --key Global:ClientAuth:JWT:aadappid --value $servicePrincipalId --name ${{ parameters.appConfigName }} --yes
      az appconfig kv set --key Global:AzureActiveDirectory:aadappid --value $servicePrincipalId --name ${{ parameters.appConfigName }} --yes
      az appconfig kv set --key KeyVault:aadappid --value $servicePrincipalId --name ${{ parameters.appConfigName }} --yes
      az appconfig kv set --key KeyVault:aadappsecret --value $servicePrincipalKey --name ${{ parameters.appConfigName }} --yes
      az appconfig kv set --key Global:AzureActiveDirectory:aadappsecret --value $servicePrincipalKey --name ${{ parameters.appConfigName }} --yes
      # Set Environment Info
      az appconfig kv set --key Global:resourceGroup --value ${{ parameters.resourceGroup }} --name ${{ parameters.appConfigName }} --yes
      az appconfig kv set --key Global:subscriptionId --value $(az account show | jq -r .id) --name ${{ parameters.appConfigName }} --yes
    addSpnToEnvironment: true
- task: AzureCLI@1
  displayName: Add Values to App Config
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    scriptLocation: 'inlineScript'
    inlineScript: |-
      rg=${{ parameters.resourceGroup }}
      # cosmos db connection string 
      cosmosDbAccountName=$(az cosmosdb list --resource-group $rg | grep name | awk -F "\"" '{print $4}')
      cosmosDbEndpoint="https://$cosmosDbAccountName.documents.azure.com:443/"
      cosmosDbAuthKey=$(az cosmosdb list-keys --resource-group $rg --name $cosmosDbAccountName | grep primaryMasterKey | awk -F "\"" '{print $4}')
      cosmosDbConnection="AccountEndpoint=$cosmosDbEndpoint;AccountKey=$cosmosDbAuthKey;"
      # event hub connection string
      evNamespace=$(az eventhubs namespace list --resource-group $rg| grep name| grep eventhub| cut -d "/" -f1| awk -F "\"" '{print $4}')
      ehQueueAuthRule='iothubroutes'
      lifecycleEv=$(az eventhubs eventhub list --resource-group $rg --namespace-name $evNamespace| grep name |grep lifecycle| awk -F "\"" '{print $4}'| cut -d "/" -f1)
      lifecycleEvConn=$(az eventhubs eventhub authorization-rule keys list --resource-group $rg --namespace-name $evNamespace --eventhub-name $lifecycleEv --name $ehQueueAuthRule |grep primaryConnectionString | awk -F "\"" '{print $4}')
      telemetryEv=$(az eventhubs eventhub list --resource-group $rg --namespace-name $evNamespace| grep name |grep telemetry| awk -F "\"" '{print $4}'| cut -d "/" -f1)
      telemetryEvConn=$(az eventhubs eventhub authorization-rule keys list --resource-group $rg --namespace-name $evNamespace --eventhub-name $telemetryEv --name $ehQueueAuthRule |grep primaryConnectionString | awk -F "\"" '{print $4}')
      twinchangeEv=$(az eventhubs eventhub list --resource-group $rg --namespace-name $evNamespace| grep name |grep twin-change| awk -F "\"" '{print $4}'| cut -d "/" -f1)
      twinchangeEvConn=$(az eventhubs eventhub authorization-rule keys list --resource-group $rg --namespace-name $evNamespace --eventhub-name $twinchangeEv --name $ehQueueAuthRule |grep primaryConnectionString | awk -F "\"" '{print $4}')
      # set the keys 
      az appconfig kv set --key TenantManagerService:cosmosDbEndpoint --value $cosmosDbEndpoint --name ${{ parameters.appConfigName }} --yes
      az appconfig kv set --key TenantManagerService:cosmosDbToken --value $cosmosDbAuthKey --name ${{ parameters.appConfigName }} --yes
      az appconfig kv set --key TenantManagerService:documentDBConnectionString --value $cosmosDbConnection --name ${{ parameters.appConfigName }} --yes
      az appconfig kv set --key TenantManagerService:lifecycleEventHubConnString --value $lifecycleEvConn --name ${{ parameters.appConfigName }} --yes
      az appconfig kv set --key TenantManagerService:telemetryEventHubConnString --value $telemetryEvConn --name ${{ parameters.appConfigName }} --yes
      az appconfig kv set --key TenantManagerService:twinChangeEventHubConnString --value $twinchangeEvConn --name ${{ parameters.appConfigName }} --yes
    addSpnToEnvironment: true