
parameters:
  serviceConnection: ''
  resourceGroup: ''
  location: ''
  appConfigName: ''
  aksName: ''
  keyVaultName: ''
  storageAccountName: ''

steps:
- task: AzureResourceGroupDeployment@2
  displayName: "Deploy App Configuration"
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    action: 'Create Or Update Resource Group'
    resourceGroupName: ${{ parameters.resourceGroup }}
    location: ${{ parameters.location }}
    templateLocation: 'Linked artifact'
    csmFile: '$(System.DefaultWorkingDirectory)/deployment/ARM/templates/appconfig.json'
    csmParametersFile: '$(System.DefaultWorkingDirectory)/deployment/ARM/parameters/appconfig.json'
    overrideParameters: '-appConfigName ${{ parameters.appConfigName }} -location ${{ parameters.location }}'
    deploymentMode: 'Incremental'
    addSpnToEnvironment: true

- task: AzureCLI@1
  displayName: Create App Config Secret in Kube
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    scriptLocation: 'inlineScript'
    inlineScript: |-
      az aks get-credentials -n ${{ parameters.aksName }} -g ${{ parameters.resourceGroup }}
      appConfigurationConnectionString=$(az appconfig credential list --name ${{ parameters.appConfigName }} -g ${{ parameters.resourceGroup }} | jq -r .[0].connectionString)
      kubectl create secret generic --namespace=default globalsecrets --from-literal=AppConfigurationConnectionString=$appConfigurationConnectionString --dry-run -o yaml | kubectl apply -f -

- task: AzureCLI@1
  displayName: Add Values to App Config
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    scriptLocation: 'inlineScript'
    inlineScript: |-
      # Needed because Azure Devops has a bug in the extension included, normally the extension will handle the flattening --  Andrew Schmidt
      jq --arg delim ':' 'reduce (tostream|select(length==2)) as $i ({};
          .[[$i[0][]|tostring]|join($delim)] = $i[1]
      )' $(System.DefaultWorkingDirectory)/deployment/pipelines/templates/infra/app-config-template.json > $(System.DefaultWorkingDirectory)/deployment/pipelines/templates/infra/app-config-template-translated.json 
      # Import Keys
      az appconfig kv import --yes --name ${{ parameters.appConfigName }} --format json --source file --path "$(System.DefaultWorkingDirectory)/deployment/pipelines/templates/infra/app-config-template-translated.json"
      # Set KeyVault Keys
      az appconfig kv set --key Global:ClientAuth:Jwt:AadAppId --value $servicePrincipalId --name ${{ parameters.appConfigName }} --yes
      az appconfig kv set --key Global:AzureActiveDirectory:AppId --value $servicePrincipalId --name ${{ parameters.appConfigName }} --yes
      az appconfig kv set --key Global:AzureActiveDirectory:AppSecret --value $servicePrincipalKey --name ${{ parameters.appConfigName }} --yes
      # Set Environment Info
      az appconfig kv set --key Global:ResourceGroup --value ${{ parameters.resourceGroup }} --name ${{ parameters.appConfigName }} --yes
      az appconfig kv set --key Global:SubscriptionId --value $(az account show | jq -r .id) --name ${{ parameters.appConfigName }} --yes
      az appconfig kv set --key Global:StorageAccount:Name --value ${{ parameters.storageAccountName }} --name ${{ parameters.appConfigName }} --yes

    addSpnToEnvironment: true

- task: AzureCLI@1
  displayName: Add Keyvault Name to App Config
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    scriptLocation: 'inlineScript'
    inlineScript: |-
      az appconfig kv set --key Global:KeyVault:Name --value ${{ parameters.keyVaultName }} --name ${{ parameters.appConfigName }} --yes
    addSpnToEnvironment: true

- task: AzureCLI@1
  displayName: Add Values to App Config
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    scriptLocation: 'inlineScript'
    inlineScript: |-
      rg=${{ parameters.resourceGroup }}
      appInsightName=$(az resource list -g $rg --resource-type "Microsoft.Insights/components" | grep name | grep appinsight | awk -F "\"" '{print $4}')
      appInsightKey=$(az resource show -g $rg -n $appInsightName --resource-type "Microsoft.Insights/components" --query properties.InstrumentationKey)
      appInsightKey="${appInsightKey//\"}"
      # cosmos db connection string
      cosmosDbAccountName=$(az cosmosdb list --resource-group $rg | grep name | awk -F "\"" '{print $4}')
      cosmosDbEndpoint="https://$cosmosDbAccountName.documents.azure.com:443/"
      cosmosDbAuthKey=$(az cosmosdb list-keys --resource-group $rg --name $cosmosDbAccountName | grep primaryMasterKey | awk -F "\"" '{print $4}')
      cosmosDbConnection="AccountEndpoint=$cosmosDbEndpoint;AccountKey=$cosmosDbAuthKey;"
      # event hub connection string
      evNamespace=$(az eventhubs namespace list --resource-group $rg| grep name| grep eventhub| cut -d "/" -f1| awk -F "\"" '{print $4}')
      ehQueueAuthRule='iothubroutes'
      lifecycleEv=$(az eventhubs eventhub list --resource-group $rg --namespace-name $evNamespace| grep name |grep lifecycle| awk -F "\"" '{print $4}'| cut -d "/" -f1)
      lifecycleEvConn=$(az eventhubs eventhub authorization-rule keys list --resource-group $rg --namespace-name $evNamespace --eventhub-name $lifecycleEv --name $ehQueueAuthRule |grep primaryConnectionString | awk -F "\"" '{print $4}')
      telemetryEv=$(az eventhubs eventhub list --resource-group $rg --namespace-name $evNamespace| grep name |grep telemetry| awk -F "\"" '{print $4}'| cut -d "/" -f1)
      telemetryEvConn=$(az eventhubs eventhub authorization-rule keys list --resource-group $rg --namespace-name $evNamespace --eventhub-name $telemetryEv --name $ehQueueAuthRule |grep primaryConnectionString | awk -F "\"" '{print $4}')
      twinchangeEv=$(az eventhubs eventhub list --resource-group $rg --namespace-name $evNamespace| grep name |grep twin-change| awk -F "\"" '{print $4}'| cut -d "/" -f1)
      twinchangeEvConn=$(az eventhubs eventhub authorization-rule keys list --resource-group $rg --namespace-name $evNamespace --eventhub-name $twinchangeEv --name $ehQueueAuthRule |grep primaryConnectionString | awk -F "\"" '{print $4}')
      # aks JWT issuer
      aksName=$(az aks list -g $rg | grep name | grep aks | cut -d "/" -f1| awk -F "\"" '{print $4}')
      jwtIssuer="https://$aksName.${{ parameters.location }}.cloudapp.azure.com/auth"
      # app config endpoint
      appConfig=$(az functionapp list --resource-group $rg | grep name | grep appconfig | awk -F "\"" '{print $4}' | head -1)
      appConfigEndpoint="https://$appConfig/api/SetAppConfigKey"
      deviceTwin=$(az functionapp list --resource-group $rg | grep name | grep devicetwin | awk -F "\"" '{print $4}' | tail -1)
      deviceTwinFuncUri="https://$deviceTwin.scm.azurewebsites.net"
      # set the keys
      az appconfig kv set --key Global:ClientAuth:Jwt:AuthIssuer --value $jwtIssuer --name ${{ parameters.appConfigName }} --yes
      az appconfig kv set --key Global:CosmosDb:AccountName --value $cosmosDbAccountName --name ${{ parameters.appConfigName }} --yes
      az appconfig kv set --key TenantManagerService:LifecycleEventHubConnectionString --value $lifecycleEvConn --name ${{ parameters.appConfigName }} --yes
      az appconfig kv set --key TenantManagerService:TelemetryEventHubConnectionString --value $telemetryEvConn --name ${{ parameters.appConfigName }} --yes
      az appconfig kv set --key TenantManagerService:TwinChangeEventHubConnectionString --value $twinchangeEvConn --name ${{ parameters.appConfigName }} --yes
      az appconfig kv set --key TenantManagerService:SetAppConfigEndpoint --value $appConfigEndpoint --name ${{ parameters.appConfigName }} --yes
      az appconfig kv set --key TenantManagerService:SetAppConfigFunction --value $appConfigEndpoint --name ${{ parameters.appConfigName }} --yes
      az appconfig kv set --key TenantManagerService:TwinChangeFunctionUri --value $deviceTwinFuncUri --name ${{ parameters.appConfigName }} --yes
      az appconfig kv set --key TenantManagerService:TelemetryFunctionUri --value $deviceTwinFuncUri --name ${{ parameters.appConfigName }} --yes
      az appconfig kv set --key TenantManagerService:LifecycleFunctionUri --value $deviceTwinFuncUri --name ${{ parameters.appConfigName }} --yes
      az appconfig kv set --key TenantManagerService:EventHubNamespaceName --value $evNamespace --name ${{ parameters.appConfigName }} --yes
      az appconfig kv set --key Global:InstrumentationKey --value $appInsightKey --name ${{ parameters.appConfigName }} --yes
    addSpnToEnvironment: true