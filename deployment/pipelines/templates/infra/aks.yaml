
parameters:
  serviceConnection: ''
  resourceGroup: ''
  aksName: ''
  location: ''
  omsWorkspaceName: ''

steps:
- task: AzureResourceGroupDeployment@2
  displayName: "Deploy Azure Kubernetes Service"
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    action: 'Create Or Update Resource Group'
    resourceGroupName: ${{ parameters.resourceGroup }}
    location: '${{ parameters.location }}'
    templateLocation: 'Linked artifact'
    csmFile: '$(System.DefaultWorkingDirectory)/deployment/ARM/templates/aks.json'
    csmParametersFile: '$(System.DefaultWorkingDirectory)/deployment/ARM/parameters/aks.json'
    overrideParameters: '-resourceName ${{ parameters.aksName }} -location ${{ parameters.location }} -dnsPrefix ${{ parameters.aksName }}-dns -servicePrincipalClientId $servicePrincipalId -servicePrincipalClientSecret $servicePrincipalKey -omsWorkspaceName ${{ parameters.omsWorkspaceName }}'
    deploymentMode: 'Incremental'
    addSpnToEnvironment: true

- task: Kubernetes@1
  displayName: Create ingress namespace
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: ${{ parameters.serviceConnection }}
    azureResourceGroup: ${{ parameters.resourceGroup }}
    kubernetesCluster: ${{ parameters.aksName }}
    command: 'apply'
    useConfigurationFile: true
    configurationType: 'inline'
    inline: |
      apiVersion: v1
      kind: Namespace
      metadata:
        name: ingress-basic

- task: Kubernetes@1
  displayName: Install the CustomResourceDefinition
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: ${{ parameters.serviceConnection }}
    azureResourceGroup: ${{ parameters.resourceGroup }}
    kubernetesCluster: ${{ parameters.aksName }}
    command: 'apply'
    arguments: --validate=false -f https://raw.githubusercontent.com/jetstack/cert-manager/v0.13.1/deploy/manifests/00-crds.yaml

- task: Kubernetes@1
  displayName: Create cert-manager namespace
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: ${{ parameters.serviceConnection }}
    azureResourceGroup: ${{ parameters.resourceGroup }}
    kubernetesCluster: ${{ parameters.aksName }}
    command: 'apply'
    useConfigurationFile: true
    configurationType: 'inline'
    inline: |
      apiVersion: v1
      kind: Namespace
      metadata:
        name: cert-manager
        labels:
          cert-manager.io/disable-validation: "true"