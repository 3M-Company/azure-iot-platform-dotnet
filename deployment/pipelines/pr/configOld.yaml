# Docker
# Build a Docker image 
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

pr:
  branches:
    include:
    - master
  paths:
    include:
    - config/

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  azureSubscription: 3M-CRSLAD16-BBIoTP-Dev
  resourceGroup: rg-crslbbiot-odin-dev
  aksCluster: aks-dev-spaces-odin
  devSpace: pr-$(System.PullRequest.PullRequestNumber)-$(Build.SourceVersion)
  pcsAppConfig: "https://app-config-odin.azconfig.io;Id=0-l4-s0:/avC76+mF2P0dRQdykx0;Secret=/yJ835E0xwCfEPGP36FGp9lPgswgoNVLjeCOfYu34v0="

jobs:
- job: Build
  displayName: Build
  pool:
    vmImage: 'ubuntu-latest'
  steps:

  - task: DotNetCoreInstaller@2
    inputs:
      version: '2.2.402'

  - task: Docker@2
    displayName: Build the Docker Image
    inputs:
      command: build
      dockerfile: '$(Build.SourcesDirectory)/config/WebService/Dockerfile'
      buildContext: '$(Build.SourcesDirectory)/config'
      tags: |
        $(tag)
      
  - task: DotNetCoreCLI@2
    displayName: Unit Test
    inputs:
      command: test
      projects: '**/*Test.csproj'

  - task: AzureCLI@1
    displayName: Create New Dev Space
    inputs:
      azureSubscription: $(azureSubscription)
      scriptLocation: 'inlineScript'
      inlineScript: |
        az aks use-dev-spaces -g $(resourceGroup) -n $(aksCluster) -s default/$(devSpace) -y
        az aks get-credentials -g $(resourceGroup) -n $(aksCluster)

  - task: KubectlInstaller@0
    inputs:
      kubectlVersion: 'latest'
      
  - task: Bash@3
    displayName: Add Secrets to Dev Space
    inputs:
      targetType: 'inline'
      script:  |
        kubectl create secret generic --namespace=$(devSpace) globalsecrets --from-literal=PCS_APPLICATION_CONFIGURATION=Endpoint=$(pcsAppConfig)

  - task: Bash@3
    displayName: Install Newman
    inputs:
      targetType: 'inline'
      script: |
        sudo npm install newman -g
        
  - task: PublishTestResults@2
    condition: always()
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/*integration-test-report.xml'
  
  - task: AzureCLI@1
    condition: always()
    displayName: Delete Dev Space
    inputs:
      azureSubscription: $(azureSubscription)
      scriptLocation: 'inlineScript'
      inlineScript: |
        az aks use-dev-spaces -g $(resourceGroup) -n $(aksCluster) -s default/$(devSpace)
        azds space remove -n $(devSpace) -y